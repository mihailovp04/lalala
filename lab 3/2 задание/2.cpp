#include <stdlib.h> 

int* stackMemory1() // Объявляю функцию, которая возвращает указатель на int.
{
    int a = 1; // Создаю локальную переменную "a" и устанавливаю ей значение 1.
    return &a; // Возвращаю указатель на "a".
}

int* stackMemory2() // Объявляю еще одну функцию, которая возвращает указатель на int.
{
    int b = 2; // Создаю локальную переменную "b" и устанавливаю ей значение 2.
    return &b; // Возвращаю указатель на "b".
}

int main() 
{
    int* b = stackMemory1(); // Вызываю функцию stackMemory1 и сохраняю возвращенный указатель в "b".
    int a1 = *b; // Разыменовываю указатель "b" и сохраняю его значение в "a1". 

    int* c = stackMemory2(); // Вызываю функцию stackMemory2 и сохраняю возвращенный указатель в "c".
    int a2 = *c; // Разыменовываю указатель "c" и сохраняю его значение в "a2". 

    int a3 = *b; // Разыменовываю указатель "b" и сохраняю его значение в "a3". 

    
    std::cout << a1 << std::endl; 
    std::cout << a2 << std::endl; 
    std::cout << a3 << std::endl; 

    // Вычисляю разницу в байтах между указателями "b" и "c" и вывожу её на консоль.
    std::cout << ((std::byte*)b - (std::byte*)c) << std::endl; // Ожидается вывод "0", так как указатели равны.

    return 0; // Возвращаем 0 как код завершения программы.
}

}
//Переменная a в static 1 - это глобальная переменная, она видна и доступна из любой функции в текущем файле и также видна в других файлах при компоновке
//Переменная a в static 2 - это статистическая переменная, она видна только в текущем файле и не видна в других файлах при компоновке